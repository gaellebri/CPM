{"ast":null,"code":"var _jsxFileName = \"/Users/gaellebriantais/podcast-transcriber/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport EpisodeDetailsForm from './EpisodeDetailsForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [audioFile, setAudioFile] = useState(null);\n  const [isTranscribing, setIsTranscribing] = useState(false);\n  const [transcription, setTranscription] = useState('');\n  const [episodeDetails, setEpisodeDetails] = useState(null);\n  const [currentStep, setCurrentStep] = useState('upload');\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (event.dataTransfer.files && event.dataTransfer.files[0]) {\n      setFile(event.dataTransfer.files[0]);\n    }\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n  const handleUpload = async event => {\n    event.preventDefault();\n    if (!file) {\n      alert('Veuillez d\\'abord sélectionner un fichier audio');\n      return;\n    }\n    setIsLoading(true);\n    const formData = new FormData();\n    formData.append('audio', file);\n    try {\n      const response = await fetch('http://localhost:8000/api/transcribe', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Erreur lors de la transcription');\n      }\n      const data = await response.json();\n      setTranscription(data.transcription);\n    } catch (error) {\n      console.error('Erreur:', error);\n      alert(`Erreur: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Transcripteur de Podcast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-container\",\n        onDrop: handleDrop,\n        onDragOver: handleDragOver,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"T\\xE9l\\xE9chargez votre fichier audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"audio/*\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [file && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Fichier s\\xE9lectionn\\xE9 : \", file.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpload,\n            disabled: !file || isLoading,\n            children: isLoading ? 'Transcription en cours...' : 'Transcrire'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Transcription en cours...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this) : transcription && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcription-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Transcription :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: transcription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EZ889lWkaFT4bNlpeGeDZ9Z80ec=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","EpisodeDetailsForm","jsxDEV","_jsxDEV","App","_s","audioFile","setAudioFile","isTranscribing","setIsTranscribing","transcription","setTranscription","episodeDetails","setEpisodeDetails","currentStep","setCurrentStep","handleFileChange","event","setFile","target","files","handleDrop","preventDefault","stopPropagation","dataTransfer","handleDragOver","handleUpload","file","alert","setIsLoading","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","error","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onDragOver","type","accept","onChange","name","onClick","disabled","isLoading","_c","$RefreshReg$"],"sources":["/Users/gaellebriantais/podcast-transcriber/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport EpisodeDetailsForm from './EpisodeDetailsForm';\n\n\nfunction App() {\n  const [audioFile, setAudioFile] = useState(null);\n  const [isTranscribing, setIsTranscribing] = useState(false);\n  const [transcription, setTranscription] = useState('');\n  const [episodeDetails, setEpisodeDetails] = useState(null);\n  const [currentStep, setCurrentStep] = useState('upload');\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleDrop = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    if (event.dataTransfer.files && event.dataTransfer.files[0]) {\n      setFile(event.dataTransfer.files[0]);\n    }\n  };\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  const handleUpload = async (event) => {\n    event.preventDefault();\n    \n    if (!file) {\n      alert('Veuillez d\\'abord sélectionner un fichier audio');\n      return;\n    }\n    \n    setIsLoading(true);\n    \n    const formData = new FormData();\n    formData.append('audio', file);\n    \n    try {\n      const response = await fetch('http://localhost:8000/api/transcribe', {\n        method: 'POST',\n        body: formData,\n      });\n      \n      if (!response.ok) {\n        throw new Error('Erreur lors de la transcription');\n      }\n      \n      const data = await response.json();\n      setTranscription(data.transcription);\n    } catch (error) {\n      console.error('Erreur:', error);\n      alert(`Erreur: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Transcripteur de Podcast</h1>\n      </header>\n      <main>\n        <div \n          className=\"upload-container\"\n          onDrop={handleDrop}\n          onDragOver={handleDragOver}\n        >\n          <h2>Téléchargez votre fichier audio</h2>\n          <input \n            type=\"file\" \n            accept=\"audio/*\" \n            onChange={handleFileChange} \n          />\n          <div>\n            {file && <p>Fichier sélectionné : {file.name}</p>}\n            <button \n              onClick={handleUpload} \n              disabled={!file || isLoading}\n            >\n              {isLoading ? 'Transcription en cours...' : 'Transcrire'}\n            </button>\n          </div>\n        </div>\n        \n        {isLoading ? (\n          <p>Transcription en cours...</p>\n        ) : (\n          transcription && (\n            <div className=\"transcription-result\">\n              <h3>Transcription :</h3>\n              <p>{transcription}</p>\n            </div>\n          )\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}